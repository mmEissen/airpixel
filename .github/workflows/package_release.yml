name: Package Release

on:
  pull_request:
    branches: 
      - master
      - dev
  push:
    branches:
      - master

jobs:
  quality_assurance:
    runs-on: ubuntu-latest
    container:
      image:  python:3.8-buster
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: poetry install
      - name: Check Version
        id: version
        run: |
          package_name=$(poetry version --no-ansi | grep --color=never -Po "^\S*")
          this_version=$(poetry version --no-ansi | grep --color=never -Po "([0-9]|\.)+")
          remote_version=$(poetry search $package_name --no-ansi | grep --color=never -Po "([0-9]|\.)+")

          echo "::set-output name=version::${this_version}"
          echo This version: $this_version
          echo Remote version: $remote_version
          dpkg --compare-versions $this_version gt $remote_version
      - name: Lint
        run: |
          poetry run black --diff --check .
          poetry run isort --check .
          poetry run flake8 . --exclude .venv
          poetry run mypy --disallow-untyped-defs airpixel/
      - name: Test
        run: poetry run pytest
  
  build_and_publish_docker:
    if: github.ref == 'refs/heads/master'
    needs: quality_assurance
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: mmeissen
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push Docker images
        id: docker_build
        uses: docker/build-push-action@v2.1.0
        with:
          context: ./ArduinoNanoIOT
          file: ./ArduinoNanoIOT/Dockerfile
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            mmeissen/upload-airpixel-arduino-nano-iot:latest
            mmeissen/upload-airpixel-arduino-nano-iot:${{needs.quality_assurance.outputs.version}}

  build_and_publish:
    if: github.ref == 'refs/heads/master'
    needs:
      - quality_assurance
      - build_and_publish_docker
    runs-on: ubuntu-latest
    container:
      image:  python:3.8-buster
    steps:
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: poetry install
      - name: Build
        run: poetry build
      - name: Publish
        run: poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
